def longest_common_subsequence(arr1, arr2):
    m, n = len(arr1), len(arr2)
    dp = [[0] * (n + 1) for _ in range(m + 1)]

    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if arr1[i - 1] == arr2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1] + 1
            else:
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])

    return dp[m][n]

def main():
    input_sequence = list(map(int, input().split()))

    n = len(input_sequence)
    reference_sequence = list(range(1, n + 1))

    max_pairs_connected = longest_common_subsequence(input_sequence, reference_sequence)

    print("Maximum pairs connected:", max_pairs_connected)

if __name__ == "__main__":
    main()
