def min_edit_distance(r_cost, i_cost, d_cost, s1, s2):
    m, n = len(s1), len(s2)
    dp = [[0 for _ in range(n + 1)] for _ in range(m + 1)]

    # Initialize the first row and column of the table
    for i in range(m + 1):
        dp[i][0] = i * d_cost

    for j in range(n + 1):
        dp[0][j] = j * i_cost

    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if s1[i - 1] == s2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1]
            else:
                dp[i][j] = min(dp[i - 1][j - 1] + r_cost,
                               dp[i][j - 1] + i_cost,
                               dp[i - 1][j] + d_cost)

    return dp[m][n]

# Input reading
r_cost = int(input())
i_cost = int(input())
d_cost = int(input())
s1 = input().strip()
s2 = input().strip()

result = min_edit_distance(r_cost, i_cost, d_cost, s1, s2)
print("Minimum edit distance:", result)
